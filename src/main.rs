#![allow(unused)]

use clap::Parser;

// Instead of text, it pays off to think of CLI arguments as a custom data type.
/// Search for a pattern in a file and display the lines that contain it.
#[derive(Parser)]
struct CliArgs {
    /// The pattern to look for
    pattern: String,
    /// The path to the file to read
    path: std::path::PathBuf, // like a String but for file system paths (cross-platform)
}

fn main() {
    // let pattern = std::env::args().nth(1).expect("no pattern given");
    // let path = std::env::args().nth(2).expect("no path given");
    // let args = CliArgs {
    //     pattern,
    //     path: std::path::PathBuf::from(path),
    // };

    let args = CliArgs::parse(); // automatically generated by the derive macro
}


